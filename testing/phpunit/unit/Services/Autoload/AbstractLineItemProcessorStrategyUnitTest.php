<?php
/**
 * @author rohith.mohan@equifax.com
 * @copyright ReachTel (ABN 40 133 677 933)
 */

namespace testing\unit\Services\Autoload;

use Services\Autoload\Exceptions\AutoloadStrategyException;
use Services\Autoload\Interfaces\AutoloadFileProcessorInterface;

/**
 * Class AbstractCsvLineItemProcessorStrategyUnitTest
 */
abstract class AbstractLineItemProcessorStrategyUnitTest extends AbstractAutoloadStrategyUnitTest
{
	/**
	 * @var AutoloadFileProcessorInterface
	 */
	protected $fileProcessor;

	/**
	 * @return void
	 */
	public function setUp() {
		$this->fileProcessor = \Phake::mock(AutoloadFileProcessorInterface::class);
		parent::setUp(); // TODO: Change the autogenerated stub
	}

	/**
	 * @return void
	 */
	public function testProcessFileThrowsExceptionWhenFileDoesNotContainRequiredColumn() {
		$contents = [['a' => 1, 'b' => 2, 'c' => 3]];
		foreach ($this->getRequiredColumns() as $column) {
			\Phake::when($this->fileProcessor)
				->convertFileToArray($this->filePath)
				->thenReturn($contents);

			$contents[0][$column] = 'data';

			try {
				$this->strategy->processFile($this->filePath);
			} catch (\Exception $e) {
				self::assertInstanceOf(AutoloadStrategyException::class, $e);
				self::assertSameEquals('Missing column ' . $column . ' in file', $e->getMessage());
			}
		}
	}

	/**
	 * @return array
	 */
	abstract protected function getRequiredColumns();
}
